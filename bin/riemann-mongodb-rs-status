#!/usr/bin/env ruby

# Gathers MongoDB db.stats() and submits them to Riemann.

require 'riemann/tools'

class Riemann::Tools::Mongo
  include Riemann::Tools
  require 'mongo'

  opt :host_prefix, "Prefix for event_host", :default => ''
  opt :mongo_host, "Mongo hostname", :default => 'localhost'
  opt :mongo_port, "Mongo port", :default => 27017
  opt :mongo_db, "Mongo database", :default => 'admin'

  def initialize
    @db = ::Mongo::MongoClient.new(opts[:mongo_host], opts[:mongo_port]).db(opts[:mongo_db])
    @cmd = {"replSetGetStatus"=>1}
  end

  def tick
    begin
      @db.command(@cmd)["members"].each do |member|
        member.each do |property, value|
          data = {
            :host    => opts[:host_prefix] + member["name"],
            :service => "mongodb #{property}",
            :metric  => value.to_s,
            :state   => value.to_s,
            :tags    => ['mongodb']
          }

          report(data)
        end
      end
    end

  end

end

Riemann::Tools::Mongo.run
