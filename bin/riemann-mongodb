#!/usr/bin/env ruby

# Gathers MongoDB db.stats() and submits them to Riemann.

require 'riemann/tools'

class Riemann::Tools::Mongo
  include Riemann::Tools
  require 'mongo'

  opt :mongo_host, "Mongo hostname", :default => 'localhost'
  opt :mongo_port, "Mongo port", :default => 27017
  opt :mongo_db, "Mongo database", :default => 'local'
  opt :mongo_user, "Mongo user for authentication", :default => ''
  opt :mongo_pass, "Mongo password for authentication", :default => ''

  def initialize
    @db = ::Mongo::MongoClient.new(opts[:mongo_host], opts[:mongo_port]).db(opts[:mongo_db])
    @db.authenticate(opts[:mongo_user], opts[:mongo_pass]) unless opts[:mongo_user].empty? || opts[:mongo_pass].empty?
  end

  def tick
    begin
      @db.stats.each do |property, value|
        data = {
          :host    => opts[:mongo_host].dup,
          :service => "mongodb #{property}",
          :metric  => value.to_s,
          :state   => value.to_s,
          :tags    => ['mongodb']
        }

        report(data)
      end
    end

  end

end

Riemann::Tools::Mongo.run
